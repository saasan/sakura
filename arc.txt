/////////////////////////////////////////////////////////////////////////////
class archiver_manager
{
public:
	archiver_manager()
	{
	}

	~archiver_manager()
	{
		unload();
	}

	bool load();
	void unload();

	bool add(const archiver &i_archiver)
	{
		m_archiver_list.push_back(i_archiver);
	}

	void get_archiver(std::vector<archiver> &o_archiver_list)
	{
		o_archiver_list = m_archiver_list;
	}

	archiver get_archiver_extension(const std::wstring &i_extension);
	archiver get_archiver_file(const std::wstring &i_file);

	int get_count()
	{
		return m_archiver_list.size();
	}

	inline const std::wstring get_xml_path()
	{
		return m_xml_path;
	}

	inline void set_xml_path(const std::wstring &i_xml_path)
	{
		m_xml_path = i_xml_path;
	}

private:
	std::vector<archiver> m_archiver_list;
	std::wstring m_xml_path;
};
